<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Slices on for func() sake { }</title>
    <link>https://forfuncsake.github.io/tags/slices/</link>
    <description>Recent content in Slices on for func() sake { }</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>&amp;copy; 2017. All rights reserved.</copyright>
    <lastBuildDate>Fri, 01 Sep 2017 23:00:32 +1000</lastBuildDate>
    
	<atom:link href="https://forfuncsake.github.io/tags/slices/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>When Go Slice Bounds Get Hazy</title>
      <link>https://forfuncsake.github.io/post/2017/09/when-go-slice-bounds-get-hazy/</link>
      <pubDate>Fri, 01 Sep 2017 23:00:32 +1000</pubDate>
      
      <guid>https://forfuncsake.github.io/post/2017/09/when-go-slice-bounds-get-hazy/</guid>
      <description>Earlier this week, I thought I stumbled across a bug in the go standard library.
Earlier this week, I was wrong.
While browsing the net/http sources, I spotted what appears to be an index out of range in calls to http.Request.BasicAuth().
Decoding func parseBasicAuth():
 If the value string has prefix &amp;ldquo;Basic &amp;ldquo; base64 decode the remainder of the string find the index of the first colon (:) in the decoded result return username and password as the substrings before and after the colon, respectively  But wait - what if there&amp;rsquo;s nothing after the colon?</description>
    </item>
    
  </channel>
</rss>